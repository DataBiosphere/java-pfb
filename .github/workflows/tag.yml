name: Tag
on:
  workflow_call: {}
  workflow_dispatch: {}

jobs:
  tag-job:
    runs-on: ubuntu-latest
    outputs:
        tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout current code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BROADBOT_TOKEN }} # this allows the push to succeed later
      - name: Bump the tag to a new version
        # https://github.com/DataBiosphere/github-actions/tree/master/actions/bumper
        uses: databiosphere/github-actions/actions/bumper@bumper-0.1.0
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
          HOTFIX_BRANCHES: hotfix.*
          DEFAULT_BUMP: minor
          RELEASE_BRANCHES: main,sh-aj-1095-publilsh
          VERSION_FILE_PATH: settings.gradle
          VERSION_LINE_MATCH: "^\\s*gradle.ext.releaseVersion\\s*=\\s*'.*'"
  release-job:
    needs: [ tag-job ]
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build jar with latest tagged version
        run: ./gradlew :cli:jar
      - name: Put workspace path in output
        id: path
        run: |
          echo "root-path=${GITHUB_WORKSPACE}" >> $GITHUB_OUTPUT
      - name: gh release command
        run: gh release upload ${{ needs.tag-job.outputs.tag }} ${GITHUB_WORKSPACE}/cli/build/libs/java-pfb-cli-${{ needs.tag-job.outputs.tag }}.jar
#      - name: Create Github Release
#        id: release
#        run: |
#          upload_url=$(gh api \
#            --method POST \
#            -H "Accept: application/vnd.github+json" \
#            -H "X-GitHub-Api-Version: 2022-11-28" \
#            /repos/$OWNER/$REPO/releases \
#            -f tag_name=$TAG \
#           -f target_commitish='main' \
#           -f name='${{ needs.tag-job.outputs.tag }}' \
#           -f body='Java-PFB Library and CLI Publish' \
#           -F draft=false \
#           -F prerelease=false \
#           -F generate_release_notes=true --jq '.data.upload_url')
#          echo 'upload_url='$upload_url >> $GITHUB_ENV
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          TAG: ${{ needs.tag-job.outputs.tag }}
#          OWNER: ${{ github.repository_owner }}
#          REPO: ${{ github.event.repository.name }}
#      - name: Upload CLI Jar to Github Release
#        run: |
#          gh api \
#            --method POST \
#            -H "Accept: application/vnd.github+json" \
#            -H "X-GitHub-Api-Version: 2022-11-28" \
#            $UPLOAD_URL \
#            -f name=$CLI_JAR \
#            -f label='application/java-archive'
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          CLI_JAR: cli/build/libs/java-pfb-cli-${{ needs.tag-job.outputs.tag }}.jar
#          UPLOAD_URL: ${{ steps.release.outputs.upload_url }}