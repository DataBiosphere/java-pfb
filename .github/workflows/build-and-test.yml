name: Build and Test

on:
  push:
    branches: [ main ]
    paths-ignore: [ '*.md' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build all projects without running tests
        run: ./gradlew --build-cache build -x test

      - name: Upload spotbugs results
        uses: github/codeql-action/upload-sarif@main
        with:
          sarif_file: library/build/reports/spotbugs/main.sarif

  source-clear:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: SourceClear scan
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        run: ./gradlew --build-cache srcclr

  unit-tests-and-sonarqube:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        # Needed by sonar to get the git history for the branch the PR will be merged into.
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Test with coverage
        run: ./gradlew --build-cache test jacocoTestReport
        # The SonarQube scan is done here, so it can upload the coverage report generated by the tests.
      - name: SonarQube scan
        run: ./gradlew --build-cache sonarqube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-slack:
    needs: [ build, unit-tests-and-sonarqube, source-clear ]
    runs-on: ubuntu-latest

    if: failure() && github.ref == 'refs/heads/main'

    steps:
      - name: Notify slack on failure
        uses: broadinstitute/action-slack@v3.8.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          channel: '#dsp-analysis-journeys-alerts'
          status: failure
          author_name: Build on dev
          fields: job,message
          text: 'Build failed :sadpanda:'
          username: 'Java-PFB GitHub Action'

  dispatch-tag:
    needs: [ build, unit-tests-and-sonarqube, source-clear ]
    runs-on: ubuntu-latest

    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: Fire off tag action
        uses: broadinstitute/workflow-dispatch@v1
        with:
          workflow: Tag
          token: ${{ secrets.BROADBOT_TOKEN }}
